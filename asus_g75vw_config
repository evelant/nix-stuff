# Edit this configuration file to define what should be installed on
# the system.  Help is available in the configuration.nix(5) man page
# or the NixOS manual available on virtual console 8 (Alt+F8).

{ config, pkgs, ... }:

{
  require =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];

  boot.initrd.kernelModules =
    [ # Specify all kernel modules that are necessary for mounting the root
      # filesystem.
      # "xfs" "ata_piix"
    ];
  
  # always use the newest kernel
  boot.kernelPackages = pkgs.linuxPackages_latest;
    
  boot.extraKernelParams = [
    "acpi = on"
    "acpi_backlight=vendor"
  ];

  boot.postBootCommands = "echo 3 > /sys/class/leds/asus\:\:kbd_backlight/brightness
  ";

  boot.extraModprobeConfig = ''
    options ath9k nohwcrypt=1
    options snd-hda-intel model=asus-mode4
  '';

  # Use the GRUB 2 boot loader.
  boot.loader.grub.enable = true;
  boot.loader.grub.version = 2;

  # Define on which hard drive you want to install Grub.
   boot.loader.grub.device = "/dev/sda";

  boot.loader.grub.extraEntries = ''
    menuentry "Windows 8" {
      insmod ntfs
      set root='(hd0,1)'
      chainloader +1 
    }
  '';
  
  time.timeZone = "America/New_York";
   networking.hostName = "nixos"; # Define your hostname.


  # for networkmanagement applet to work in kde your users must be members
  # of the "networkmanager" group!
   networking.networkmanager.enable = true;

  # Add filesystem entries for each partition that you want to see
  # mounted at boot time.  This should include at least the root
  # filesystem.

  fileSystems."/".device = "/dev/disk/by-label/nixos";

  # fileSystems."/data" =     # where you want to mount the device
  #   { device = "/dev/sdb";  # the device
  #     fsType = "ext3";      # the type of the partition
  #     options = "data=journal";
  #   };

  # List swap partitions activated at boot time.
  swapDevices =
    [  { device = "/dev/disk/by-label/nixswap"; }
    ];

  # Select internationalisation properties.
  # i18n = {
  #   consoleFont = "lat9w-16";
  #   consoleKeyMap = "us";
  #   defaultLocale = "en_US.UTF-8";
  # };

  nixpkgs.config.packageOverrides = pkgs :
  {
    kde4 = pkgs.recurseIntoAttrs pkgs.kde411;
  };

  # List services that you want to enable:


  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Enable CUPS to print documents.
   services.printing.enable = true;
  #

  # Enable the X11 windowing system.
   services.xserver.enable = true;
  # services.xserver.layout = "us";
  # services.xserver.xkbOptions = "eurosign:e";
  services.xserver.synaptics.enable = true;
  services.xserver.synaptics.twoFingerScroll = true;
  services.xserver.synaptics.accelFactor = "0.076";
  services.xserver.synaptics.horizontalScroll = true;
  services.xserver.synaptics.maxSpeed = "13.0";
  services.xserver.synaptics.minSpeed = "0.1";
  services.xserver.synaptics.palmDetect = true;
  services.xserver.synaptics.vertEdgeScroll = false;

  # Enable the KDE Desktop Environment.
  services.xserver.displayManager.kdm.enable = true;
  services.xserver.desktopManager.kde4.enable = true;

  environment.systemPackages = with pkgs; [
    #kde4.networkmanagement
    vlc
    vim
    wget
    git
    firefox
    chromiumDev
    oxygen_gtk
    nodejs
    jdk
    unzip
    redis
    sublime
    dropbox
    dropbox-cli
    keepass
    skype
    kde4.kdemultimedia
    kde4.kdegraphics
    kde4.kdelibs
    kde4.kdenetwork
    kde4.kdeutils
    kde4.kdeadmin
    kde4.kdebindings
    kde4.kdeartwork
    kde4.kdeplasma_addons
    kde4.kde_wallpapers
    kde4.k3b
    kde4.bluedevil
    kde4.kdevelop
    kde4.kdiff3
    kde4.amarok
    #kde4.kmplayer
    #kde4.kipi_plugins
    kde4.partitionManager
    kde4.semnotes
    kde4.pykde4
    pyqt4
    kde4.kmix
    flashplayer
    libreoffice
    dbus_python
    wesnoth
  ];

  environment.shellInit = ''
    export GTK_PATH=$GTK_PATH:${pkgs.oxygen_gtk}/lib/gtk-2.0
    export GTK2_RC_FILES=$GTK2_RC_FILES:${pkgs.oxygen_gtk}/share/themes/oxygen-gtk/gtk-2.0/gtkrc
  '';
}
